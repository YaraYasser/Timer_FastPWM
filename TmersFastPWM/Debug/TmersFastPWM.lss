
TmersFastPWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004e6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  000004e6  0000055a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000055e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000590  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000005cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006b0  00000000  00000000  0000061c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005ec  00000000  00000000  00000ccc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002f9  00000000  00000000  000012b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b0  00000000  00000000  000015b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000331  00000000  00000000  00001664  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000118  00000000  00000000  00001995  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001aad  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 4a 00 	jmp	0x94	; 0x94 <__vector_10>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ee       	ldi	r30, 0xE6	; 230
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 36       	cpi	r26, 0x64	; 100
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include "Timer.h"
volatile short i = 5;
volatile short Increment = 1;
int main(void)
{
	DDRB = 0xff;
  82:	8f ef       	ldi	r24, 0xFF	; 255
  84:	87 bb       	out	0x17, r24	; 23
	Timer0_FastPWM_Init(i);
  86:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <i>
  8a:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <i+0x1>
  8e:	0e 94 b9 00 	call	0x172	; 0x172 <Timer0_FastPWM_Init>
  92:	ff cf       	rjmp	.-2      	; 0x92 <main+0x10>

00000094 <__vector_10>:
		
    }
}

ISR(TIMER0_COMP_vect)
{
  94:	1f 92       	push	r1
  96:	0f 92       	push	r0
  98:	0f b6       	in	r0, 0x3f	; 63
  9a:	0f 92       	push	r0
  9c:	11 24       	eor	r1, r1
  9e:	2f 93       	push	r18
  a0:	3f 93       	push	r19
  a2:	4f 93       	push	r20
  a4:	5f 93       	push	r21
  a6:	6f 93       	push	r22
  a8:	7f 93       	push	r23
  aa:	8f 93       	push	r24
  ac:	9f 93       	push	r25
  ae:	af 93       	push	r26
  b0:	bf 93       	push	r27
  b2:	ef 93       	push	r30
  b4:	ff 93       	push	r31
	if(i == 100)
  b6:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <i>
  ba:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <i+0x1>
  be:	84 36       	cpi	r24, 0x64	; 100
  c0:	91 05       	cpc	r25, r1
  c2:	29 f4       	brne	.+10     	; 0xce <__vector_10+0x3a>
	{
		Increment = 0;
  c4:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <Increment+0x1>
  c8:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <Increment>
  cc:	0c c0       	rjmp	.+24     	; 0xe6 <__vector_10+0x52>
	}
	else if (i == 0){
  ce:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <i>
  d2:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <i+0x1>
  d6:	89 2b       	or	r24, r25
  d8:	31 f4       	brne	.+12     	; 0xe6 <__vector_10+0x52>
		Increment = 1;
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <Increment+0x1>
  e2:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <Increment>
	}
	if(Increment){
  e6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <Increment>
  ea:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <Increment+0x1>
  ee:	89 2b       	or	r24, r25
  f0:	51 f0       	breq	.+20     	; 0x106 <__vector_10+0x72>
	i+= 5;
  f2:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <i>
  f6:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <i+0x1>
  fa:	05 96       	adiw	r24, 0x05	; 5
  fc:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <i+0x1>
 100:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <i>
 104:	09 c0       	rjmp	.+18     	; 0x118 <__vector_10+0x84>
	}
	else{
		i-=5;
 106:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <i>
 10a:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <i+0x1>
 10e:	05 97       	sbiw	r24, 0x05	; 5
 110:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <i+0x1>
 114:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <i>
	}
	Timer0_FastPWM_Init(i);
 118:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <i>
 11c:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <i+0x1>
 120:	0e 94 b9 00 	call	0x172	; 0x172 <Timer0_FastPWM_Init>
	
}
 124:	ff 91       	pop	r31
 126:	ef 91       	pop	r30
 128:	bf 91       	pop	r27
 12a:	af 91       	pop	r26
 12c:	9f 91       	pop	r25
 12e:	8f 91       	pop	r24
 130:	7f 91       	pop	r23
 132:	6f 91       	pop	r22
 134:	5f 91       	pop	r21
 136:	4f 91       	pop	r20
 138:	3f 91       	pop	r19
 13a:	2f 91       	pop	r18
 13c:	0f 90       	pop	r0
 13e:	0f be       	out	0x3f, r0	; 63
 140:	0f 90       	pop	r0
 142:	1f 90       	pop	r1
 144:	18 95       	reti

00000146 <PWM_vSetDutyCycle>:
	
}


void PWM_vSetDutyCycle(char parDuty){
	OCR0 = 255*(parDuty/100.0);
 146:	68 2f       	mov	r22, r24
 148:	70 e0       	ldi	r23, 0x00	; 0
 14a:	80 e0       	ldi	r24, 0x00	; 0
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	0e 94 78 01 	call	0x2f0	; 0x2f0 <__floatsisf>
 152:	20 e0       	ldi	r18, 0x00	; 0
 154:	30 e0       	ldi	r19, 0x00	; 0
 156:	48 ec       	ldi	r20, 0xC8	; 200
 158:	52 e4       	ldi	r21, 0x42	; 66
 15a:	0e 94 d5 00 	call	0x1aa	; 0x1aa <__divsf3>
 15e:	20 e0       	ldi	r18, 0x00	; 0
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	4f e7       	ldi	r20, 0x7F	; 127
 164:	53 e4       	ldi	r21, 0x43	; 67
 166:	0e 94 04 02 	call	0x408	; 0x408 <__mulsf3>
 16a:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
 16e:	6c bf       	out	0x3c, r22	; 60
 170:	08 95       	ret

00000172 <Timer0_FastPWM_Init>:
#include "Timer.h"
#include "macros.h"
void Timer0_FastPWM_Init(char parDuty){
	/*choose mode*/
	SET_BIT(TCCR0,WGM00);
 172:	93 b7       	in	r25, 0x33	; 51
 174:	90 64       	ori	r25, 0x40	; 64
 176:	93 bf       	out	0x33, r25	; 51
	
	SET_BIT(TCCR0,WGM01);
 178:	93 b7       	in	r25, 0x33	; 51
 17a:	98 60       	ori	r25, 0x08	; 8
 17c:	93 bf       	out	0x33, r25	; 51
	/*choose ocro*/
	PWM_vSetDutyCycle(parDuty);
 17e:	0e 94 a3 00 	call	0x146	; 0x146 <PWM_vSetDutyCycle>
	/*ENABLE INTERUPT*/
	
	SET_BIT(TIMSK,OCIE0);
 182:	89 b7       	in	r24, 0x39	; 57
 184:	82 60       	ori	r24, 0x02	; 2
 186:	89 bf       	out	0x39, r24	; 57
	sei();
 188:	78 94       	sei
	/*choose non inverting*/
	
	CLR_BIT(TCCR0,COM00);
 18a:	83 b7       	in	r24, 0x33	; 51
 18c:	8f 7e       	andi	r24, 0xEF	; 239
 18e:	83 bf       	out	0x33, r24	; 51
	SET_BIT(TCCR0,COM01);
 190:	83 b7       	in	r24, 0x33	; 51
 192:	80 62       	ori	r24, 0x20	; 32
 194:	83 bf       	out	0x33, r24	; 51
	/*CLOCK*/
	SET_BIT(TCCR0,CS00);
 196:	83 b7       	in	r24, 0x33	; 51
 198:	81 60       	ori	r24, 0x01	; 1
 19a:	83 bf       	out	0x33, r24	; 51
	CLR_BIT(TCCR0,CS01);
 19c:	83 b7       	in	r24, 0x33	; 51
 19e:	8d 7f       	andi	r24, 0xFD	; 253
 1a0:	83 bf       	out	0x33, r24	; 51
	SET_BIT(TCCR0,CS02);
 1a2:	83 b7       	in	r24, 0x33	; 51
 1a4:	84 60       	ori	r24, 0x04	; 4
 1a6:	83 bf       	out	0x33, r24	; 51
 1a8:	08 95       	ret

000001aa <__divsf3>:
 1aa:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <__divsf3x>
 1ae:	0c 94 ca 01 	jmp	0x394	; 0x394 <__fp_round>
 1b2:	0e 94 c3 01 	call	0x386	; 0x386 <__fp_pscB>
 1b6:	58 f0       	brcs	.+22     	; 0x1ce <__divsf3+0x24>
 1b8:	0e 94 bc 01 	call	0x378	; 0x378 <__fp_pscA>
 1bc:	40 f0       	brcs	.+16     	; 0x1ce <__divsf3+0x24>
 1be:	29 f4       	brne	.+10     	; 0x1ca <__divsf3+0x20>
 1c0:	5f 3f       	cpi	r21, 0xFF	; 255
 1c2:	29 f0       	breq	.+10     	; 0x1ce <__divsf3+0x24>
 1c4:	0c 94 b3 01 	jmp	0x366	; 0x366 <__fp_inf>
 1c8:	51 11       	cpse	r21, r1
 1ca:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <__fp_szero>
 1ce:	0c 94 b9 01 	jmp	0x372	; 0x372 <__fp_nan>

000001d2 <__divsf3x>:
 1d2:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__fp_split3>
 1d6:	68 f3       	brcs	.-38     	; 0x1b2 <__divsf3+0x8>

000001d8 <__divsf3_pse>:
 1d8:	99 23       	and	r25, r25
 1da:	b1 f3       	breq	.-20     	; 0x1c8 <__divsf3+0x1e>
 1dc:	55 23       	and	r21, r21
 1de:	91 f3       	breq	.-28     	; 0x1c4 <__divsf3+0x1a>
 1e0:	95 1b       	sub	r25, r21
 1e2:	55 0b       	sbc	r21, r21
 1e4:	bb 27       	eor	r27, r27
 1e6:	aa 27       	eor	r26, r26
 1e8:	62 17       	cp	r22, r18
 1ea:	73 07       	cpc	r23, r19
 1ec:	84 07       	cpc	r24, r20
 1ee:	38 f0       	brcs	.+14     	; 0x1fe <__divsf3_pse+0x26>
 1f0:	9f 5f       	subi	r25, 0xFF	; 255
 1f2:	5f 4f       	sbci	r21, 0xFF	; 255
 1f4:	22 0f       	add	r18, r18
 1f6:	33 1f       	adc	r19, r19
 1f8:	44 1f       	adc	r20, r20
 1fa:	aa 1f       	adc	r26, r26
 1fc:	a9 f3       	breq	.-22     	; 0x1e8 <__divsf3_pse+0x10>
 1fe:	35 d0       	rcall	.+106    	; 0x26a <__divsf3_pse+0x92>
 200:	0e 2e       	mov	r0, r30
 202:	3a f0       	brmi	.+14     	; 0x212 <__divsf3_pse+0x3a>
 204:	e0 e8       	ldi	r30, 0x80	; 128
 206:	32 d0       	rcall	.+100    	; 0x26c <__divsf3_pse+0x94>
 208:	91 50       	subi	r25, 0x01	; 1
 20a:	50 40       	sbci	r21, 0x00	; 0
 20c:	e6 95       	lsr	r30
 20e:	00 1c       	adc	r0, r0
 210:	ca f7       	brpl	.-14     	; 0x204 <__divsf3_pse+0x2c>
 212:	2b d0       	rcall	.+86     	; 0x26a <__divsf3_pse+0x92>
 214:	fe 2f       	mov	r31, r30
 216:	29 d0       	rcall	.+82     	; 0x26a <__divsf3_pse+0x92>
 218:	66 0f       	add	r22, r22
 21a:	77 1f       	adc	r23, r23
 21c:	88 1f       	adc	r24, r24
 21e:	bb 1f       	adc	r27, r27
 220:	26 17       	cp	r18, r22
 222:	37 07       	cpc	r19, r23
 224:	48 07       	cpc	r20, r24
 226:	ab 07       	cpc	r26, r27
 228:	b0 e8       	ldi	r27, 0x80	; 128
 22a:	09 f0       	breq	.+2      	; 0x22e <__divsf3_pse+0x56>
 22c:	bb 0b       	sbc	r27, r27
 22e:	80 2d       	mov	r24, r0
 230:	bf 01       	movw	r22, r30
 232:	ff 27       	eor	r31, r31
 234:	93 58       	subi	r25, 0x83	; 131
 236:	5f 4f       	sbci	r21, 0xFF	; 255
 238:	3a f0       	brmi	.+14     	; 0x248 <__divsf3_pse+0x70>
 23a:	9e 3f       	cpi	r25, 0xFE	; 254
 23c:	51 05       	cpc	r21, r1
 23e:	78 f0       	brcs	.+30     	; 0x25e <__divsf3_pse+0x86>
 240:	0c 94 b3 01 	jmp	0x366	; 0x366 <__fp_inf>
 244:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <__fp_szero>
 248:	5f 3f       	cpi	r21, 0xFF	; 255
 24a:	e4 f3       	brlt	.-8      	; 0x244 <__divsf3_pse+0x6c>
 24c:	98 3e       	cpi	r25, 0xE8	; 232
 24e:	d4 f3       	brlt	.-12     	; 0x244 <__divsf3_pse+0x6c>
 250:	86 95       	lsr	r24
 252:	77 95       	ror	r23
 254:	67 95       	ror	r22
 256:	b7 95       	ror	r27
 258:	f7 95       	ror	r31
 25a:	9f 5f       	subi	r25, 0xFF	; 255
 25c:	c9 f7       	brne	.-14     	; 0x250 <__divsf3_pse+0x78>
 25e:	88 0f       	add	r24, r24
 260:	91 1d       	adc	r25, r1
 262:	96 95       	lsr	r25
 264:	87 95       	ror	r24
 266:	97 f9       	bld	r25, 7
 268:	08 95       	ret
 26a:	e1 e0       	ldi	r30, 0x01	; 1
 26c:	66 0f       	add	r22, r22
 26e:	77 1f       	adc	r23, r23
 270:	88 1f       	adc	r24, r24
 272:	bb 1f       	adc	r27, r27
 274:	62 17       	cp	r22, r18
 276:	73 07       	cpc	r23, r19
 278:	84 07       	cpc	r24, r20
 27a:	ba 07       	cpc	r27, r26
 27c:	20 f0       	brcs	.+8      	; 0x286 <__divsf3_pse+0xae>
 27e:	62 1b       	sub	r22, r18
 280:	73 0b       	sbc	r23, r19
 282:	84 0b       	sbc	r24, r20
 284:	ba 0b       	sbc	r27, r26
 286:	ee 1f       	adc	r30, r30
 288:	88 f7       	brcc	.-30     	; 0x26c <__divsf3_pse+0x94>
 28a:	e0 95       	com	r30
 28c:	08 95       	ret

0000028e <__fixunssfsi>:
 28e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__fp_splitA>
 292:	88 f0       	brcs	.+34     	; 0x2b6 <__fixunssfsi+0x28>
 294:	9f 57       	subi	r25, 0x7F	; 127
 296:	98 f0       	brcs	.+38     	; 0x2be <__fixunssfsi+0x30>
 298:	b9 2f       	mov	r27, r25
 29a:	99 27       	eor	r25, r25
 29c:	b7 51       	subi	r27, 0x17	; 23
 29e:	b0 f0       	brcs	.+44     	; 0x2cc <__fixunssfsi+0x3e>
 2a0:	e1 f0       	breq	.+56     	; 0x2da <__fixunssfsi+0x4c>
 2a2:	66 0f       	add	r22, r22
 2a4:	77 1f       	adc	r23, r23
 2a6:	88 1f       	adc	r24, r24
 2a8:	99 1f       	adc	r25, r25
 2aa:	1a f0       	brmi	.+6      	; 0x2b2 <__fixunssfsi+0x24>
 2ac:	ba 95       	dec	r27
 2ae:	c9 f7       	brne	.-14     	; 0x2a2 <__fixunssfsi+0x14>
 2b0:	14 c0       	rjmp	.+40     	; 0x2da <__fixunssfsi+0x4c>
 2b2:	b1 30       	cpi	r27, 0x01	; 1
 2b4:	91 f0       	breq	.+36     	; 0x2da <__fixunssfsi+0x4c>
 2b6:	0e 94 fd 01 	call	0x3fa	; 0x3fa <__fp_zero>
 2ba:	b1 e0       	ldi	r27, 0x01	; 1
 2bc:	08 95       	ret
 2be:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__fp_zero>
 2c2:	67 2f       	mov	r22, r23
 2c4:	78 2f       	mov	r23, r24
 2c6:	88 27       	eor	r24, r24
 2c8:	b8 5f       	subi	r27, 0xF8	; 248
 2ca:	39 f0       	breq	.+14     	; 0x2da <__fixunssfsi+0x4c>
 2cc:	b9 3f       	cpi	r27, 0xF9	; 249
 2ce:	cc f3       	brlt	.-14     	; 0x2c2 <__fixunssfsi+0x34>
 2d0:	86 95       	lsr	r24
 2d2:	77 95       	ror	r23
 2d4:	67 95       	ror	r22
 2d6:	b3 95       	inc	r27
 2d8:	d9 f7       	brne	.-10     	; 0x2d0 <__fixunssfsi+0x42>
 2da:	3e f4       	brtc	.+14     	; 0x2ea <__fixunssfsi+0x5c>
 2dc:	90 95       	com	r25
 2de:	80 95       	com	r24
 2e0:	70 95       	com	r23
 2e2:	61 95       	neg	r22
 2e4:	7f 4f       	sbci	r23, 0xFF	; 255
 2e6:	8f 4f       	sbci	r24, 0xFF	; 255
 2e8:	9f 4f       	sbci	r25, 0xFF	; 255
 2ea:	08 95       	ret

000002ec <__floatunsisf>:
 2ec:	e8 94       	clt
 2ee:	09 c0       	rjmp	.+18     	; 0x302 <__floatsisf+0x12>

000002f0 <__floatsisf>:
 2f0:	97 fb       	bst	r25, 7
 2f2:	3e f4       	brtc	.+14     	; 0x302 <__floatsisf+0x12>
 2f4:	90 95       	com	r25
 2f6:	80 95       	com	r24
 2f8:	70 95       	com	r23
 2fa:	61 95       	neg	r22
 2fc:	7f 4f       	sbci	r23, 0xFF	; 255
 2fe:	8f 4f       	sbci	r24, 0xFF	; 255
 300:	9f 4f       	sbci	r25, 0xFF	; 255
 302:	99 23       	and	r25, r25
 304:	a9 f0       	breq	.+42     	; 0x330 <__floatsisf+0x40>
 306:	f9 2f       	mov	r31, r25
 308:	96 e9       	ldi	r25, 0x96	; 150
 30a:	bb 27       	eor	r27, r27
 30c:	93 95       	inc	r25
 30e:	f6 95       	lsr	r31
 310:	87 95       	ror	r24
 312:	77 95       	ror	r23
 314:	67 95       	ror	r22
 316:	b7 95       	ror	r27
 318:	f1 11       	cpse	r31, r1
 31a:	f8 cf       	rjmp	.-16     	; 0x30c <__floatsisf+0x1c>
 31c:	fa f4       	brpl	.+62     	; 0x35c <__floatsisf+0x6c>
 31e:	bb 0f       	add	r27, r27
 320:	11 f4       	brne	.+4      	; 0x326 <__floatsisf+0x36>
 322:	60 ff       	sbrs	r22, 0
 324:	1b c0       	rjmp	.+54     	; 0x35c <__floatsisf+0x6c>
 326:	6f 5f       	subi	r22, 0xFF	; 255
 328:	7f 4f       	sbci	r23, 0xFF	; 255
 32a:	8f 4f       	sbci	r24, 0xFF	; 255
 32c:	9f 4f       	sbci	r25, 0xFF	; 255
 32e:	16 c0       	rjmp	.+44     	; 0x35c <__floatsisf+0x6c>
 330:	88 23       	and	r24, r24
 332:	11 f0       	breq	.+4      	; 0x338 <__floatsisf+0x48>
 334:	96 e9       	ldi	r25, 0x96	; 150
 336:	11 c0       	rjmp	.+34     	; 0x35a <__floatsisf+0x6a>
 338:	77 23       	and	r23, r23
 33a:	21 f0       	breq	.+8      	; 0x344 <__floatsisf+0x54>
 33c:	9e e8       	ldi	r25, 0x8E	; 142
 33e:	87 2f       	mov	r24, r23
 340:	76 2f       	mov	r23, r22
 342:	05 c0       	rjmp	.+10     	; 0x34e <__floatsisf+0x5e>
 344:	66 23       	and	r22, r22
 346:	71 f0       	breq	.+28     	; 0x364 <__floatsisf+0x74>
 348:	96 e8       	ldi	r25, 0x86	; 134
 34a:	86 2f       	mov	r24, r22
 34c:	70 e0       	ldi	r23, 0x00	; 0
 34e:	60 e0       	ldi	r22, 0x00	; 0
 350:	2a f0       	brmi	.+10     	; 0x35c <__floatsisf+0x6c>
 352:	9a 95       	dec	r25
 354:	66 0f       	add	r22, r22
 356:	77 1f       	adc	r23, r23
 358:	88 1f       	adc	r24, r24
 35a:	da f7       	brpl	.-10     	; 0x352 <__floatsisf+0x62>
 35c:	88 0f       	add	r24, r24
 35e:	96 95       	lsr	r25
 360:	87 95       	ror	r24
 362:	97 f9       	bld	r25, 7
 364:	08 95       	ret

00000366 <__fp_inf>:
 366:	97 f9       	bld	r25, 7
 368:	9f 67       	ori	r25, 0x7F	; 127
 36a:	80 e8       	ldi	r24, 0x80	; 128
 36c:	70 e0       	ldi	r23, 0x00	; 0
 36e:	60 e0       	ldi	r22, 0x00	; 0
 370:	08 95       	ret

00000372 <__fp_nan>:
 372:	9f ef       	ldi	r25, 0xFF	; 255
 374:	80 ec       	ldi	r24, 0xC0	; 192
 376:	08 95       	ret

00000378 <__fp_pscA>:
 378:	00 24       	eor	r0, r0
 37a:	0a 94       	dec	r0
 37c:	16 16       	cp	r1, r22
 37e:	17 06       	cpc	r1, r23
 380:	18 06       	cpc	r1, r24
 382:	09 06       	cpc	r0, r25
 384:	08 95       	ret

00000386 <__fp_pscB>:
 386:	00 24       	eor	r0, r0
 388:	0a 94       	dec	r0
 38a:	12 16       	cp	r1, r18
 38c:	13 06       	cpc	r1, r19
 38e:	14 06       	cpc	r1, r20
 390:	05 06       	cpc	r0, r21
 392:	08 95       	ret

00000394 <__fp_round>:
 394:	09 2e       	mov	r0, r25
 396:	03 94       	inc	r0
 398:	00 0c       	add	r0, r0
 39a:	11 f4       	brne	.+4      	; 0x3a0 <__fp_round+0xc>
 39c:	88 23       	and	r24, r24
 39e:	52 f0       	brmi	.+20     	; 0x3b4 <__fp_round+0x20>
 3a0:	bb 0f       	add	r27, r27
 3a2:	40 f4       	brcc	.+16     	; 0x3b4 <__fp_round+0x20>
 3a4:	bf 2b       	or	r27, r31
 3a6:	11 f4       	brne	.+4      	; 0x3ac <__fp_round+0x18>
 3a8:	60 ff       	sbrs	r22, 0
 3aa:	04 c0       	rjmp	.+8      	; 0x3b4 <__fp_round+0x20>
 3ac:	6f 5f       	subi	r22, 0xFF	; 255
 3ae:	7f 4f       	sbci	r23, 0xFF	; 255
 3b0:	8f 4f       	sbci	r24, 0xFF	; 255
 3b2:	9f 4f       	sbci	r25, 0xFF	; 255
 3b4:	08 95       	ret

000003b6 <__fp_split3>:
 3b6:	57 fd       	sbrc	r21, 7
 3b8:	90 58       	subi	r25, 0x80	; 128
 3ba:	44 0f       	add	r20, r20
 3bc:	55 1f       	adc	r21, r21
 3be:	59 f0       	breq	.+22     	; 0x3d6 <__fp_splitA+0x10>
 3c0:	5f 3f       	cpi	r21, 0xFF	; 255
 3c2:	71 f0       	breq	.+28     	; 0x3e0 <__fp_splitA+0x1a>
 3c4:	47 95       	ror	r20

000003c6 <__fp_splitA>:
 3c6:	88 0f       	add	r24, r24
 3c8:	97 fb       	bst	r25, 7
 3ca:	99 1f       	adc	r25, r25
 3cc:	61 f0       	breq	.+24     	; 0x3e6 <__fp_splitA+0x20>
 3ce:	9f 3f       	cpi	r25, 0xFF	; 255
 3d0:	79 f0       	breq	.+30     	; 0x3f0 <__fp_splitA+0x2a>
 3d2:	87 95       	ror	r24
 3d4:	08 95       	ret
 3d6:	12 16       	cp	r1, r18
 3d8:	13 06       	cpc	r1, r19
 3da:	14 06       	cpc	r1, r20
 3dc:	55 1f       	adc	r21, r21
 3de:	f2 cf       	rjmp	.-28     	; 0x3c4 <__fp_split3+0xe>
 3e0:	46 95       	lsr	r20
 3e2:	f1 df       	rcall	.-30     	; 0x3c6 <__fp_splitA>
 3e4:	08 c0       	rjmp	.+16     	; 0x3f6 <__fp_splitA+0x30>
 3e6:	16 16       	cp	r1, r22
 3e8:	17 06       	cpc	r1, r23
 3ea:	18 06       	cpc	r1, r24
 3ec:	99 1f       	adc	r25, r25
 3ee:	f1 cf       	rjmp	.-30     	; 0x3d2 <__fp_splitA+0xc>
 3f0:	86 95       	lsr	r24
 3f2:	71 05       	cpc	r23, r1
 3f4:	61 05       	cpc	r22, r1
 3f6:	08 94       	sec
 3f8:	08 95       	ret

000003fa <__fp_zero>:
 3fa:	e8 94       	clt

000003fc <__fp_szero>:
 3fc:	bb 27       	eor	r27, r27
 3fe:	66 27       	eor	r22, r22
 400:	77 27       	eor	r23, r23
 402:	cb 01       	movw	r24, r22
 404:	97 f9       	bld	r25, 7
 406:	08 95       	ret

00000408 <__mulsf3>:
 408:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3x>
 40c:	0c 94 ca 01 	jmp	0x394	; 0x394 <__fp_round>
 410:	0e 94 bc 01 	call	0x378	; 0x378 <__fp_pscA>
 414:	38 f0       	brcs	.+14     	; 0x424 <__mulsf3+0x1c>
 416:	0e 94 c3 01 	call	0x386	; 0x386 <__fp_pscB>
 41a:	20 f0       	brcs	.+8      	; 0x424 <__mulsf3+0x1c>
 41c:	95 23       	and	r25, r21
 41e:	11 f0       	breq	.+4      	; 0x424 <__mulsf3+0x1c>
 420:	0c 94 b3 01 	jmp	0x366	; 0x366 <__fp_inf>
 424:	0c 94 b9 01 	jmp	0x372	; 0x372 <__fp_nan>
 428:	11 24       	eor	r1, r1
 42a:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <__fp_szero>

0000042e <__mulsf3x>:
 42e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__fp_split3>
 432:	70 f3       	brcs	.-36     	; 0x410 <__mulsf3+0x8>

00000434 <__mulsf3_pse>:
 434:	95 9f       	mul	r25, r21
 436:	c1 f3       	breq	.-16     	; 0x428 <__mulsf3+0x20>
 438:	95 0f       	add	r25, r21
 43a:	50 e0       	ldi	r21, 0x00	; 0
 43c:	55 1f       	adc	r21, r21
 43e:	62 9f       	mul	r22, r18
 440:	f0 01       	movw	r30, r0
 442:	72 9f       	mul	r23, r18
 444:	bb 27       	eor	r27, r27
 446:	f0 0d       	add	r31, r0
 448:	b1 1d       	adc	r27, r1
 44a:	63 9f       	mul	r22, r19
 44c:	aa 27       	eor	r26, r26
 44e:	f0 0d       	add	r31, r0
 450:	b1 1d       	adc	r27, r1
 452:	aa 1f       	adc	r26, r26
 454:	64 9f       	mul	r22, r20
 456:	66 27       	eor	r22, r22
 458:	b0 0d       	add	r27, r0
 45a:	a1 1d       	adc	r26, r1
 45c:	66 1f       	adc	r22, r22
 45e:	82 9f       	mul	r24, r18
 460:	22 27       	eor	r18, r18
 462:	b0 0d       	add	r27, r0
 464:	a1 1d       	adc	r26, r1
 466:	62 1f       	adc	r22, r18
 468:	73 9f       	mul	r23, r19
 46a:	b0 0d       	add	r27, r0
 46c:	a1 1d       	adc	r26, r1
 46e:	62 1f       	adc	r22, r18
 470:	83 9f       	mul	r24, r19
 472:	a0 0d       	add	r26, r0
 474:	61 1d       	adc	r22, r1
 476:	22 1f       	adc	r18, r18
 478:	74 9f       	mul	r23, r20
 47a:	33 27       	eor	r19, r19
 47c:	a0 0d       	add	r26, r0
 47e:	61 1d       	adc	r22, r1
 480:	23 1f       	adc	r18, r19
 482:	84 9f       	mul	r24, r20
 484:	60 0d       	add	r22, r0
 486:	21 1d       	adc	r18, r1
 488:	82 2f       	mov	r24, r18
 48a:	76 2f       	mov	r23, r22
 48c:	6a 2f       	mov	r22, r26
 48e:	11 24       	eor	r1, r1
 490:	9f 57       	subi	r25, 0x7F	; 127
 492:	50 40       	sbci	r21, 0x00	; 0
 494:	9a f0       	brmi	.+38     	; 0x4bc <__mulsf3_pse+0x88>
 496:	f1 f0       	breq	.+60     	; 0x4d4 <__mulsf3_pse+0xa0>
 498:	88 23       	and	r24, r24
 49a:	4a f0       	brmi	.+18     	; 0x4ae <__mulsf3_pse+0x7a>
 49c:	ee 0f       	add	r30, r30
 49e:	ff 1f       	adc	r31, r31
 4a0:	bb 1f       	adc	r27, r27
 4a2:	66 1f       	adc	r22, r22
 4a4:	77 1f       	adc	r23, r23
 4a6:	88 1f       	adc	r24, r24
 4a8:	91 50       	subi	r25, 0x01	; 1
 4aa:	50 40       	sbci	r21, 0x00	; 0
 4ac:	a9 f7       	brne	.-22     	; 0x498 <__mulsf3_pse+0x64>
 4ae:	9e 3f       	cpi	r25, 0xFE	; 254
 4b0:	51 05       	cpc	r21, r1
 4b2:	80 f0       	brcs	.+32     	; 0x4d4 <__mulsf3_pse+0xa0>
 4b4:	0c 94 b3 01 	jmp	0x366	; 0x366 <__fp_inf>
 4b8:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <__fp_szero>
 4bc:	5f 3f       	cpi	r21, 0xFF	; 255
 4be:	e4 f3       	brlt	.-8      	; 0x4b8 <__mulsf3_pse+0x84>
 4c0:	98 3e       	cpi	r25, 0xE8	; 232
 4c2:	d4 f3       	brlt	.-12     	; 0x4b8 <__mulsf3_pse+0x84>
 4c4:	86 95       	lsr	r24
 4c6:	77 95       	ror	r23
 4c8:	67 95       	ror	r22
 4ca:	b7 95       	ror	r27
 4cc:	f7 95       	ror	r31
 4ce:	e7 95       	ror	r30
 4d0:	9f 5f       	subi	r25, 0xFF	; 255
 4d2:	c1 f7       	brne	.-16     	; 0x4c4 <__mulsf3_pse+0x90>
 4d4:	fe 2b       	or	r31, r30
 4d6:	88 0f       	add	r24, r24
 4d8:	91 1d       	adc	r25, r1
 4da:	96 95       	lsr	r25
 4dc:	87 95       	ror	r24
 4de:	97 f9       	bld	r25, 7
 4e0:	08 95       	ret

000004e2 <_exit>:
 4e2:	f8 94       	cli

000004e4 <__stop_program>:
 4e4:	ff cf       	rjmp	.-2      	; 0x4e4 <__stop_program>
